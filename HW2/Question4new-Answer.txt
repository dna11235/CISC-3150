        int x = 4282;
        for(int i=0;i<35;i++){
            System.out.printf("%d\t\t%32s\n",i,Integer.toBinaryString(x>>>i));
        }
        // In the first case "x" is being change temporarily! Because it's out of valid range it resets itself.
        // Valid range is 0 to 31
        // The value that being manipulated is 4282 at all times.
        // Reference: https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.19

        int x1 = 4282;
        for(int i=0;i<35;i++){
            System.out.printf("%d\t\t%32s\n",i,Integer.toBinaryString(x1));
            x1 = x1 >>> i;
        }
        // In the second case "x" is being changed permanently! It is still resets itself when out of range, but
        // in this case by the time out of range is triggered, "x" is already equals 0 and therefore doesn't change.
